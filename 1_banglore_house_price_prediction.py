# -*- coding: utf-8 -*-
"""1.Banglore House price prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11o5f2WrDKbPGtsE_DPffl9_LE8Ol09FL

# BUSINESS PROBLEM- Predict thr price of Banglore House

## Using Linear-Regression - Supervised Machine Learning Algorithms

### Import Library
"""

import pandas as pd

"""0. NOTES FOr LOAD Data from Googe Drive
1. "https://drive.google.com/file/d/1zFfeKHIPo5i8kj-KOIuMIa-ANakxCeAN/view?usp=sharing"   -->Orignl Data
2. id=1zFfeKHIPo5i8kj-KOIuMIa-ANakxCeAN ----->this we get from orignal link this it is present b/w (/d/********/view?)

3. https://drive.google.com/uc?export=download&id=  ===>>At id=(we place the id 
of orignal link)
"""

# https://drive.google.com/file/d/115CTA-tBV8a_VFYzUCk_MkaAJIq4xBAt/view?usp=sharing

path=r"https://drive.google.com/uc?export=download&id=115CTA-tBV8a_VFYzUCk_MkaAJIq4xBAt"
df=pd.read_csv(path)

df.head()

"""## Split Data"""

X=df.drop('price',axis=1)    #Independent variable
y=df['price']                # Dependent variable

print("Shape of x=",X.shape)   #107 features or columns
print("Shape of y=",y.shape)   # only one feature price

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=51)   # Test percentage data=20 AND Remaining are train data

print("Shape of x_train=",X_train.shape)
print("Shape of x_test=",X_test.shape)   
print("Shape of y_train=",y_train.shape)
print("Shape of y_test=",y_test.shape)

"""##### Feature Scaling"""

# By Doing this we get data in one format like cm,ft,m,all in one format
from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
sc.fit(X_train)
X_train=sc.transform(X_train)
X_test=sc.transform(X_test)

"""## Linear Regression - ML_Model training"""

from sklearn.linear_model import LinearRegression
#(X, y, sample_weight=None) -> LinearRegression
lr=LinearRegression()
lr.fit(X_train,y_train)

lr.coef_     # Model Learn Cofficient value B1,B2,B3....B107

# model learn Intercept value 
lr.intercept_

"""#### Pridict the Value Of Home and Test"""

X_test[0,:]    # Information of Single House  (row=0,all Columns)

# Pridict the Value Of House
lr.predict([X_test[0,:]])

lr.predict(X_test)  # Pridict of Multiple House

# Cross Check Of Prediction   (model given=76.90 ---actuaal_price= 80.00)
y_test

# CHEck Percentage ACCuracy    # 79 % correct Data
lr.score(X_test,y_test)

